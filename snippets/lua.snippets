# INSTEAD Snippets
# Vim edition
# v0.2
# Created by exelenter, modifyed by major_kolz
#
#
# ===Упрощение синтаксиса
snippet inc
	${1:<var>} = $1 + ${2:1};
snippet n=
	~= ${1}
snippet ret
	return ${1:true};
snippet for
	for ${1:i = 1}, ${2} do
		${3}
	end
snippet forg
	for i, v in ${4:ipairs}( ${1} ) do
		${2}
	end ${3}
snippet forg2
	for i, _val in ipairs( ${1} ) do
		for j, _lav in ipairs( _val ) do
			${2:io.write( _lav .. "\t" );}
		end
		${3:print "";}
	end
snippet loc
	local ${1:x} = ${2:1}
snippet {
	{
		${1}
	};
snippet (
	(${1})
snippet swap
	${1:<arg1>}, ${2:<arg2>} = $2, $1;
snippet error
	error( "${1}"${2:, 2})
snippet req
	require '${1:Module}'
snippet dof
	require '${1:Filename}.lua'
#
# ===Функции
snippet fun
	function( ${1:<arg>} )
		${2}
	end,
snippet funs
	function(s)
		${1:-- Code}
	end,
snippet funsw
	function(s, w)
		${1:-- Code}
	end,
snippet func
	function ${1:Function_name}( ${2:args} )
		${3:-- Code}	
	end
#	
# ===Условный оператор
snippet if
	if ${1:Expression} then
		${2:-- Code}
	end
snippet ifel
	if ${1:Expression} then
		${2:-- Code}
	else
		${3:-- Code}
	end
snippet elif
	elseif ${1:Expression} then
		${2:-- Code}
#
# ===Оформление текста
snippet [[
	[[${1}]]${2:;}
snippet кр
	<i>${1}</i>${0}
# Позволяет добавлять новую строку в списки аргументов/таблиц (после печати n/l нужно жать tab два раза, почему-то)
snippet ;n
	,
	"${1}";
snippet ;l
	, "${1}";
snippet ;н
	,
	"${1}";
#
# ===Разграничение блоков кода
snippet --=
	--====================| ${1} |====================-- 
snippet --=2
	--====================| ${1} |====================--
	${2}
	--====================| . |====================--
#
#
#						INSTEAD
#
#
# ===Создание шапки
snippet insteadbegin
	--$Name: ${1:Game name}$
	--$Version: 0.1$
	--$Author: ${2:Author}$

	instead_version "`system("instead -version")`";

	require 'xact'
	require 'format'
	format.para   = true;   -- Отступы в начале абзаца;
	format.dash   = true;   -- Замена двойного минуса на длинное тире;
	format.quotes = true;   -- Замена " " на типографские << >>;

	require 'useful'        -- Набор полезных функций

	main = room {
		nam = '...',
		forcedsc = true;
		dsc = txtr [["$1"]] .. txtr[[^Автор: $2]] ..
			[[${3}]]
			.. [[^^Если это ваша первая {instead|INSTEAD}-игра - пройдите сперва {intro|обучение}.]],
		obj = {
			vway( 'next', "^^^^^^^^^^^^{> Начать игру!}", '${4:first_game_room}' ),
			xact( 'instead', "http://instead.syscall.ru/" ),
			xact( 'intro', "Для перехода нажмите Esc, выберите пункт \"Выбор игры\" и \"Обучение\"" );
		},
	};

	$4 = room${5}
#
# ===Базовые конструкции
snippet room
	room{
		nam = "${1}",
		dsc = [[${2}]],
		obj = {
			${3}
		}, ${4}
	};
snippet obj
	obj{
		nam = "${1}",
		dsc = [[${2} {${3}} ${4}]],
		act = function(s)
			${5}
		end,${6}
	};
snippet objt fun desc
	obj{
		nam = "${1:_}",
		dsc = function(s)
			${2}
		end,
		act = function(s)
			${3}
		end,${0}
	};
snippet objt text only
	obj{
		nam = "${1:_}",
		dsc = [[${2} {${3}} ${4}]],
		act = [[${5}]], ${6}
	};
snippet objt functional
	obj{
		nam = function(s)
			${1}
		end,
		dsc = function(s)
			${2}
		end,
		act = function(s)
			${3}
		end,${4}
	};
snippet objt actor
	obj{
		nam = "${1:_}",
		dsc = nil,
		var {
			${2}
		},
		act = function(s)
			${3}
		end,${4}
snippet objt blank
	obj{
		nam = ${1}
		dsc = ${2}
		act = ${3}
	}
#
# ===Текстовые поля
snippet nam
	nam = [[${1:Name}]],
snippet dsc
	dsc = [[${1} {${2}} ${3}]],
snippet dsc=
	dsc = [[${1}]],
snippet act
	act = [[${1:Action text}]],
snippet use
	use = [[${1:Use text}]],
snippet used
	used = [[${1:Used text}]],
snippet enter
	enter = [[${1:Enter text}]],
snippet entered
	entered = [[${1:Entered text}]],
snippet exit
	exit = [[${1:Exit text}]],
snippet left
	left = [[${1:Left text}]],
snippet inv
	inv = [[${1:Inventory text}]],
snippet tak
	tak = [[${1:Take text}]],
snippet disp
	disp = [[${1:Display text}]],
snippet pic
	pic = [[${1:gfx/pic.png}]],
snippet xdsc
	xdsc = [[${1:Description}]],
snippet life
	life = [[${1:Life text}]],
snippet where
	where = [[${1:Where room}]],
#
# ===Функциональные поля
snippet namf
	nam = function(s)
		${1}
	end,
snippet dscf
	dsc = function(s)
		${1:-- Code}
	end,
snippet actf
	act = function(s)
		${1:-- Code}
	end,
snippet usef
	use = function(s, w)
		if w == ${1:<that_obj>} then
			${2}
		end ${3}
	end,
snippet usedf
	used = function(s, w)
		if w == ${1:<that_obj>} then
			${2}
		end ${3}
	end,
snippet invf
	inv = function(s)
		${1}
	end,
snippet dispf
	disp = function(s)
		${1}
	end,
snippet lifef
	life = function(s)
		${1}
	end,
snippet enterf
	enter = function(s, from)
		${1}
	end,
snippet enteredf
	entered = function(s, from)
		${1}
	end,
snippet exitf
	exit = function(s, to)
		${1}
	end,
snippet leftf
	left = function(s, to)
		${1}
	end,
snippet leftc
	left = code[[ ${1} ]];
#
# ===Табличные поля
snippet obj=
	obj = {
		'${1}',${2}
	},
snippet way
	way = {
		'${1}',${2}
	},
snippet var
	var {
		${1:-- Variables}
	},
#
# ===Булевы поля
snippet forcedsc
	forcedsc = true;
snippet hideinv
	hideinv = true;
snippet nolife
	nolife = true;
#
# ===Вспомогательные конструкции
snippet p
	p [[${1:Text}]];
snippet p(
	p( "${1} " .. ${2} );
snippet p{
	p "${1}{${2}}${3}";
snippet pn
	p [[${1:Text}]];
snippet print
	print( ${1:text } ${2:.. <codevar>} ); 
snippet plr
	= player {
		${1:-- Player}
	},
snippet stat
	= stat {
		${1:-- Stat}
	};
snippet menu
	menu {
		nam = "${1}",
		menu = function(s)
			${2}
		end,
	};
snippet init
	function init()
		${1:-- Code}
	end;
snippet xact
	xact( '${1:id}', "${2}" ),
snippet xacd
	xact( '${1:id}', code[[${2:action}]] ),
snippet code
	code[[${1}]]${2:;}
snippet click
	click = function(s, x, y)
		${1:-- Code}
	end,
snippet vroom
	vroom( "${1}", '${2}' ),
snippet vobj
	vobj( "${1:название}", "${2}"),
snippet vway
	vway( '${1}', "{· ${3}} ${4}", '${2}' ),
#
# ===Диалоги
snippet phr
	[${1:Number}] = phr(${2:You phrase}, ${3:Other phrase}, [[${4:Code}]]),
snippet _phr
	[${1:Number}] = _phr(${2:You phrase}, ${3:Other phrase}, [[${4:Code}]]),${5}
#
# ===Управляющие русские комбинации
snippet нл
	^ ${1}
snippet сд
	{${1}}${2}
snippet сс
	{${1}|${2}}${3}
snippet кв
	\"${1}\"${2}
snippet тс
	p "${1}";
snippet тск
	p [[${1}]];
snippet бт
	[[${1}]]${2:;}
snippet кат
	[cut] 
snippet упд
	[upd] 
#
# ===Сниппеты для useful.lua
snippet _dynout
	_dynout {
		"${1}",
		"${2}",
		"${3}";${0}
	};
snippet switch
	switch( ${1} ) {
		"${2}",
		"${3}",
		"${4}";${0}
		def = ${5:function() error ("Событие не должно произойти: " .. $1) end};
	}
snippet _iflink
	_if( "_${1}",
			"${2}{${3}}${4}",
			"${5}{${6}}${7}"
		);
snippet _if
	_if( "_${1}",
			"${2}",
			"${3}"
		);
snippet _trig
	_trig( "_${1}",
			"${2}",
			"${3}"
		);
snippet snd
	sound( "${1:<nam>}", ${2:<chanel>});
snippet msc
	music "${1:<nam>}";
snippet imgpth	
	image_ "${1:<nam>}";
snippet cutscene
	cutscene{
		nam = "...",
		dsc = [[ ${1}
			{cut} {code back()}
		]];
	};

